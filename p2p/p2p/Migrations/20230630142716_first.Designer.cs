// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using p2pAPI.Models;

#nullable disable

namespace p2p.Migrations
{
    [DbContext(typeof(P2PContext))]
    [Migration("20230630142716_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("p2p.Models.GeneralItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.HasKey("id");

                    b.ToTable("GeneralItem");

                    b.HasDiscriminator<string>("Discriminator").HasValue("GeneralItem");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("p2p.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("p2p.Models.Chapter", b =>
                {
                    b.HasBaseType("p2p.Models.GeneralItem");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<int?>("duration")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Chapter");
                });

            modelBuilder.Entity("p2p.Models.Lesson", b =>
                {
                    b.HasBaseType("p2p.Models.GeneralItem");

                    b.Property<string>("content")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("GeneralItem", t =>
                        {
                            t.Property("title")
                                .HasColumnName("Lesson_title");
                        });

                    b.HasDiscriminator().HasValue("Lesson");
                });

            modelBuilder.Entity("p2p.Models.Person", b =>
                {
                    b.HasBaseType("p2p.Models.GeneralItem");

                    b.Property<string>("adress")
                        .HasColumnType("text");

                    b.Property<DateTime?>("birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Person");
                });

            modelBuilder.Entity("p2p.Models.Tag", b =>
                {
                    b.HasBaseType("p2p.Models.GeneralItem");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Tag");
                });

            modelBuilder.Entity("p2p.Models.Training", b =>
                {
                    b.HasBaseType("p2p.Models.GeneralItem");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("GeneralItem", t =>
                        {
                            t.Property("title")
                                .HasColumnName("Training_title");
                        });

                    b.HasDiscriminator().HasValue("Training");
                });
#pragma warning restore 612, 618
        }
    }
}
